# Mac向けの設定を書く

# aliases
alias -g C='| pbcopy'
alias deckset="open -a /Applications/Deckset.app/Contents/MacOS/Deckset"
alias matrix="cmatrix -s -u 6"

# oh-my-zsh
export ZSH=$HOME/.oh-my-zsh
ZSH_THEME="amuse"
DISABLE_UPDATE_PROMPT=true
plugins+=(zsh-completions git docker)
autoload -U compinit && compinit -C
source $ZSH/oh-my-zsh.sh

# prompt
# RPROMPT='${HOST}'
RPROMPT=''

# homebrew
if which brew > /dev/null; then
  export PATH=/usr/local/bin:$PATH
  export PATH=/usr/local/sbin:$PATH
  alias brew="env PATH=${PATH/\/usr\/local\/var\/pyenv\/shims:?/} brew"
fi

# coreutils
# refs http://qiita.com/catatsuy/items/00ebf78f56960b6d43c2#2-4
if [ -d /usr/local/opt/coreutils/libexec/gnubin ]; then
  export PATH=/usr/local/opt/coreutils/libexec/gnubin:$PATH
  export MANPATH=/usr/local/opt/coreutils/libexec/gnuman:$MANPATH
  alias ls='ls --color=auto'
else
  export LSCOLORS=gxfxcxdxbxegedabagacad
  alias ls='ls -G'
fi

# mysql
export PATH="/usr/local/opt/mysql-client/bin:$PATH"

# direnv
if which direnv > /dev/null; then eval "$(direnv hook zsh)"; fi

# pyenv
export PYENV_ROOT=/usr/local/var/pyenv
if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi

# pyenv-virtualenv
if which pyenv-virtualenv > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi

# rbenv
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

# nodebrew
if which nodebrew > /dev/null; then export PATH=$HOME/.nodebrew/current/bin:$PATH; fi

# go
if [ -d "/usr/local/go/" ]; then
  export PATH=/usr/local/go/bin:$PATH
  export GOPATH=$HOME
  export GOROOT=$(go env GOROOT)
  export PATH=$GOPATH/bin:$PATH
fi

# composer
export PATH="$PATH:$HOME/.composer/vendor/bin"

# The next line updates PATH for the Google Cloud SDK.
if [ -f "$HOME/google-cloud-sdk/path.zsh.inc" ]; then source "$HOME/google-cloud-sdk/path.zsh.inc"; fi

# The next line enables shell command completion for gcloud.
if [ -f "$HOME/google-cloud-sdk/completion.zsh.inc" ]; then source "$HOME/google-cloud-sdk/completion.zsh.inc"; fi

# peco
setopt hist_ignore_all_dups
function peco-select-history() {
  local tac
  if which tac > /dev/null; then
    tac="tac"
  else
    tac="tail -r"
  fi
  BUFFER=$(fc -l -n 1 | eval $tac | peco --query "$LBUFFER")
  CURSOR=$#BUFFER
  zle clear-screen
}
zle -N peco-select-history
bindkey '^r' peco-select-history

function peco-src () {
  local selected_dir=$(ghq list -p | peco --query "$LBUFFER")
  if [ -n "$selected_dir" ]; then
    BUFFER="cd ${selected_dir}"
    zle accept-line
  fi
  zle clear-screen
}
zle -N peco-src
bindkey '^p' peco-src
